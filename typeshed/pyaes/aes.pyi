from typing import Any, Optional

xrange = range

class AES:
    number_of_rounds: Any = ...
    rcon: Any = ...
    S: Any = ...
    Si: Any = ...
    T1: Any = ...
    T2: Any = ...
    T3: Any = ...
    T4: Any = ...
    T5: Any = ...
    T6: Any = ...
    T7: Any = ...
    T8: Any = ...
    U1: Any = ...
    U2: Any = ...
    U3: Any = ...
    U4: Any = ...
    def __init__(self, key: Any) -> None: ...
    def encrypt(self, plaintext: Any): ...
    def decrypt(self, ciphertext: Any): ...

class Counter:
    def __init__(self, initial_value: int = ...) -> None: ...
    value: Any = ...
    def increment(self) -> None: ...

class AESBlockModeOfOperation:
    def __init__(self, key: Any) -> None: ...
    def decrypt(self, ciphertext: Any) -> None: ...
    def encrypt(self, plaintext: Any) -> None: ...

class AESStreamModeOfOperation(AESBlockModeOfOperation): ...

class AESSegmentModeOfOperation(AESStreamModeOfOperation):
    segment_bytes: int = ...

class AESModeOfOperationECB(AESBlockModeOfOperation):
    name: str = ...
    def encrypt(self, plaintext: Any): ...
    def decrypt(self, ciphertext: Any): ...

class AESModeOfOperationCBC(AESBlockModeOfOperation):
    name: str = ...
    def __init__(self, key: Any, iv: Optional[Any] = ...) -> None: ...
    def encrypt(self, plaintext: Any): ...
    def decrypt(self, ciphertext: Any): ...

class AESModeOfOperationCFB(AESSegmentModeOfOperation):
    name: str = ...
    def __init__(self, key: Any, iv: Any, segment_size: int = ...) -> None: ...
    segment_bytes: Any = ...
    def encrypt(self, plaintext: Any): ...
    def decrypt(self, ciphertext: Any): ...

class AESModeOfOperationOFB(AESStreamModeOfOperation):
    name: str = ...
    def __init__(self, key: Any, iv: Optional[Any] = ...) -> None: ...
    def encrypt(self, plaintext: Any): ...
    def decrypt(self, ciphertext: Any): ...

class AESModeOfOperationCTR(AESStreamModeOfOperation):
    name: str = ...
    def __init__(self, key: Any, counter: Optional[Any] = ...) -> None: ...
    def encrypt(self, plaintext: Any): ...
    def decrypt(self, crypttext: Any): ...

AESModesOfOperation: Any
